apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kove.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "kove.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kove.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "kove.selectorLabels" . | nindent 8 }}
      annotations:
        {{-  toYaml .Values.deployment.annotations | nindent 8 }}
    spec:
    {{- if not .Values.serviceAccount }}
      serviceAccountName: {{ include "kove.fullname" . }}
    {{- else }}
      serviceAccountName: {{ .Values.serviceAccount }}
    {{- end }}
      automountServiceAccountToken: true
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if empty .Values.image.tag }}
          image: "{{ .Values.image.repository }}:v{{ .Chart.AppVersion }}"
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- end }}
          args: [ "-config", "/config/config.yaml" ]
          volumeMounts:
          - name: config
            mountPath: "/config"
            readOnly: true
          - name: policies
            mountPath: "/policies"
            readOnly: true
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          {{- if .Values.deployment.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.deployment.livenessProbe.path | quote }}
              port: http
            failureThreshold: {{ .Values.deployment.livenessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.deployment.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.deployment.livenessProbe.timeoutSeconds }}
          {{- end }}
          {{- if .Values.deployment.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.deployment.readinessProbe.path | quote }}
              port: http
            failureThreshold: {{ .Values.deployment.readinessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.deployment.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.deployment.readinessProbe.timeoutSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
      volumes:
        - name: config
          configMap:
            name: {{ include "kove.fullname" . }}-config
        - name: policies
          configMap:
            {{- if empty .Values.policyConfigMap }}
            name: {{ include "kove.fullname" . }}-policy
            {{- else }}
            name: {{ .Values.policyConfigMap }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    securityContext:
      runAsNonRoot: true

